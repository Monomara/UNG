<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprWaterold</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>objWater2</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//set these in creation code
trg = 0;

v = 0;      //vspeed
h = 0;      //hspeed

dir = 0;    //direction
spd = 0;    //speed
tick = 0;   //trigger time

grvdir = 270; //gravity direction
grv = 0;    //gravity

pth = noone;    //path
endct = 0;  //path end-action
pos = 0;    //path position
            
flux = false;   //stretch
imgXi = 0;      //image_xscale increase
imgXd = 0;      //image_xscale decrease
imgXf = 1;      //image_xscale maximum
imgXe = 1;      //image_xscale minimum
imgYi = 0;      //image_yscale increase
imgYd = 0;      //image_yscale decrease
imgYf = 1;      //image_yscale maximum
imgYe = 1;      //image_yscale minimum

fade = false;   //fade
fadeType = 0;   //(0 = fade-out, 1 = fade-in)
alpha = 0.025;   //fade alpha

snd = noone;
bounce = false;

cycle = 0;
trg2 = false;
triggered = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch(cycle)
{
    case 0: speed = 0; hspeed = 0; vspeed = 0; break;
    case 1: speed = -speed; alarm[0] = tick; break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!triggered &amp;&amp; global.trigger[trg] || !triggered &amp;&amp; trg = 0)
{
    if (v != 0 || h != 0)
    {
        vspeed = v;
        hspeed = h;
    }
    else if (spd != 0)
    {
        direction = dir;
        speed = spd;
        alarm[0] = tick;
        
        if (pth != noone)
        {
            path = pth;
            path_endaction = endct;
            
            path_start(pth, spd, endct, 0);
            path_position = pos;
        }
    }
    if (grv != 0)
    {
        gravity_direction = grvdir;
        gravity = grv;
    }
    
    if (snd != noone) { audio_play_sound(snd, 1, false); }
    triggered = true;
}
else if (flux &amp;&amp; global.trigger[trg])
{
    if (imgXi != 0 || imgYi != 0)
    {
        if (image_xscale != imgXf) { image_xscale += imgXi; } else { image_xscale = imgXf; }
        if (image_yscale != imgYf) { image_yscale += imgYi; } else { image_yscale = imgYf; }
    }
    if (image_xscale &gt;= imgXf &amp;&amp; image_yscale &gt;= imgYf) { triggered = true; }
}
else if (fade &amp;&amp; global.trigger[trg])
{
    switch (fadeType)
    {
        case 0: if (image_alpha &gt; 0) { image_alpha -= alpha; } 
        else { triggered = true; instance_destroy(); } break;
        case 1: if (image_alpha &lt; 1) { image_alpha += alpha; } 
        else { triggered = true; } break;
    }
}
if (bounce) { move_bounce_solid(false); }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (fadeType = 1) { image_alpha = 0; }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
